package jkea.core;

/**
 * Interface for defining simulator types. All methods must be thread safe.
 */
public interface Simulator {

	/**
	 * Returns the default distinguisher for this simulator.
	 *
	 * @return the default distinguisher for this simulator
	 */
	public String getDefaultDistinguisher();

	/**
	 * Returns the secret key on which this simulated data is based
	 *
	 * @return the secret key on which this simulated data is based
	 */
	public short[] getKey();

	/**
	 * Returns the user-friendly name for this simulator.
	 *
	 * @return the user-friendly name for this simulator
	 */
	public String getName();

	/**
	 * Returns the number of distinguishing vectors generated by this simulator.
	 *
	 * @return the number of distinguishing vectors generated by this simulator
	 */
	public int getNumberOfVectors();

	/**
	 * Returns the length of the distinguishing vectors generated by this
	 * simulator.
	 *
	 * @return the length of the distinguishing vectors generated by this
	 *         simulator
	 *
	 */
	public int getVectorLength();

	/**
	 * Returns all distinguishing vectors generated by this simulator.
	 *
	 * @return all distinguishing vectors generated by this simulator
	 */
	public double[][] getVectors();

	/**
	 * Begins simulation of the attack and generating the raw trace data and
	 * distinguishing it.
	 *
	 */
	public void runAttack();

	/**
	 * Sets the distinguisher used to process this simulated data.
	 *
	 * @param distinguisher
	 *            the distinguisher used to process this simulated data
	 */
	public void setDistinguisher(Distinguisher distinguisher);

}
